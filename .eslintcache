[{"D:\\React\\React\\classes\\yektanet-project\\src\\index.js":"1","D:\\React\\React\\classes\\yektanet-project\\src\\App.js":"2","D:\\React\\React\\classes\\yektanet-project\\src\\reportWebVitals.js":"3","D:\\React\\React\\classes\\yektanet-project\\src\\components\\FiltersList.js":"4","D:\\React\\React\\classes\\yektanet-project\\src\\components\\Filter.js":"5","D:\\React\\React\\classes\\yektanet-project\\src\\components\\DataTable.js":"6","D:\\React\\React\\classes\\yektanet-project\\src\\hooks\\useSortableData.js":"7","D:\\React\\React\\classes\\yektanet-project\\src\\functions\\compare.js":"8","D:\\React\\React\\classes\\yektanet-project\\src\\reducers\\reducer.js":"9","D:\\React\\React\\classes\\yektanet-project\\src\\actions\\action.js":"10"},{"size":372,"mtime":1609083071127,"results":"11","hashOfConfig":"12"},{"size":1759,"mtime":1609083103650,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":620,"mtime":1609080979317,"results":"15","hashOfConfig":"12"},{"size":582,"mtime":1609082244966,"results":"16","hashOfConfig":"12"},{"size":5806,"mtime":1609067199652,"results":"17","hashOfConfig":"12"},{"size":2102,"mtime":1609000667014,"results":"18","hashOfConfig":"12"},{"size":1791,"mtime":1609000724309,"results":"19","hashOfConfig":"12"},{"size":4506,"mtime":1609084814628,"results":"20","hashOfConfig":"12"},{"size":245,"mtime":1609062399331,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14sd55c",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\React\\React\\classes\\yektanet-project\\src\\index.js",[],"D:\\React\\React\\classes\\yektanet-project\\src\\App.js",[],"D:\\React\\React\\classes\\yektanet-project\\src\\reportWebVitals.js",[],["47","48"],"D:\\React\\React\\classes\\yektanet-project\\src\\components\\FiltersList.js",["49"],"import React, { useRef } from 'react';\r\nimport Filter from './Filter';\r\nimport './FiltersList.css';\r\n\r\nfunction FiltersList({ filters, onFilterChange }) {\r\n    return (\r\n        <div className='filtersList'>\r\n            {\r\n                filters.map(filter => (\r\n                    <Filter\r\n                        key={filter.id}\r\n                        name={filter.name}\r\n                        id={filter.id}\r\n                        value={filter.value}\r\n                        onFilterChange={onFilterChange}\r\n                    />\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\nexport default FiltersList;",["50","51"],"D:\\React\\React\\classes\\yektanet-project\\src\\components\\Filter.js",["52"],"import React, { useRef } from 'react';\r\nimport './Filter.css';\r\n\r\nfunction Filter({ name, onFilterChange, id, value }) {\r\n    function handleInputChange(e) {\r\n        onFilterChange(e.target.value, id);\r\n    }\r\n\r\n    return (\r\n        <div className='filter'>\r\n            <div className=\"filter__label\">\r\n                <label>{name}</label>\r\n            </div>\r\n            <div className=\"filter__input\">\r\n                <input type='text' value={value} onChange={(e) => handleInputChange(e)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Filter);\r\n\r\n\r\n\r\n","D:\\React\\React\\classes\\yektanet-project\\src\\components\\DataTable.js",["53"],"import React, { useState } from 'react';\r\nimport './DataTable.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faStar as regularStar } from '@fortawesome/fontawesome-free-regular';\r\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction filterAll(filters, data) {\r\n    let filteredData = data;\r\n    filters.forEach(element => {\r\n        if (element.value.length !== 0) {\r\n            if (element.key !== 'date') {\r\n                filteredData = filteredData.filter(d => {\r\n                    return (d[element.key].toLowerCase().includes(element.value.toLowerCase()))\r\n                })\r\n            } else {\r\n                filteredData = binaryFilter(filteredData, element.value);\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n    return filteredData;\r\n}\r\n\r\nfunction bSearch(arr, x) {\r\n    let start = 0, end = arr.length - 1;\r\n    while (start <= end) {\r\n        let mid = Math.floor((start + end) / 2);\r\n        if (arr[mid]['date'].includes(x)) return mid;\r\n        else if (arr[mid] < x)\r\n            start = mid + 1;\r\n        else\r\n            end = mid - 1;\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction binaryFilter(data, key) {\r\n    data.sort();\r\n    let filteredArr = [];\r\n    let result = 0;\r\n    while (result !== -1) {\r\n        result = bSearch(data, key);\r\n        if (result !== -1) {\r\n            filteredArr.push(data[result]);\r\n            data.splice(result, 1);\r\n        }\r\n    }\r\n    return filteredArr;\r\n}\r\nfunction DataTable({\r\n    data,\r\n    filters,\r\n    setCurrentPage,\r\n    nextDisabled,\r\n    prevDisabled,\r\n    handleSort,\r\n    sortConfig,\r\n    onStar\r\n}) {\r\n    let filteredData = data;\r\n    filteredData = filterAll(filters, filteredData);\r\n    function setSortIcon(column) {\r\n        if (sortConfig !== null &&\r\n            sortConfig.direction === 'ascending' &&\r\n            sortConfig.key === column) {\r\n            return (<FontAwesomeIcon icon={faSortUp} />)\r\n        } else if (sortConfig !== null &&\r\n            sortConfig.direction === 'descending' &&\r\n            sortConfig.key === column) {\r\n            return (<FontAwesomeIcon icon={faSortDown} />)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='dataTable'>\r\n            <table>\r\n                <thead>\r\n                    <tr role=\"row\">\r\n\r\n                        <th\r\n                            role=\"columnheader\"\r\n                            onClick={() => handleSort('new_value')}\r\n                        >\r\n                            {setSortIcon('new_value')}\r\n                            مقدار جدید\r\n                        </th>\r\n                        <th\r\n                            onClick={() => handleSort('old_value')}\r\n                            role=\"columnheader\">\r\n                            {setSortIcon('old_value')}\r\n                            مقدار قدیمی\r\n                        </th>\r\n                        <th\r\n                            role=\"columnheader\"\r\n                            onClick={() => handleSort('field')}\r\n                        >\r\n                            {setSortIcon('field')}\r\n                            فیلد\r\n                        </th>\r\n                        <th\r\n                            onClick={() => handleSort('title')}\r\n                            role=\"columnheader\"\r\n                        >\r\n                            {setSortIcon('title')}\r\n                            نام آگهی\r\n                        </th>\r\n                        <th\r\n                            role=\"columnheader\"\r\n                            onClick={() => handleSort('date')}\r\n                        >\r\n                            {setSortIcon('date')}\r\n                            تاریخ\r\n                        </th>\r\n                        <th\r\n                            role=\"columnheader\"\r\n                            onClick={() => handleSort('name')}\r\n                        >\r\n                            {setSortIcon('name')}\r\n                            نام تغییردهنده\r\n                        </th>\r\n                        <th\r\n                            role=\"columnheader\"\r\n                        // onClick={() => handleSort('new_value')}\r\n                        >\r\n                            Starred\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {filteredData.map(row => (\r\n                        <tr key={row.id} role=\"row\">\r\n                            <td role=\"cell\">{row.new_value}</td>\r\n                            <td role=\"cell\">{row.old_value}</td>\r\n                            <td role=\"cell\">{row.field}</td>\r\n                            <td role=\"cell\">{row.title}</td>\r\n                            <td role=\"cell\">{row.date}</td>\r\n                            <td role=\"cell\">{row.name}</td>\r\n                            <td\r\n                                role=\"cell\"\r\n                                onClick={() => onStar(row.id)}\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    icon={row.isStarred ? faStar : regularStar}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div className='table__pagination'>\r\n                <button disabled={prevDisabled} onClick={() => setCurrentPage(-1)}>Previous</button>\r\n                <button disabled={nextDisabled} onClick={() => setCurrentPage(1)}>Next</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTable;","D:\\React\\React\\classes\\yektanet-project\\src\\hooks\\useSortableData.js",[],"D:\\React\\React\\classes\\yektanet-project\\src\\functions\\compare.js",[],"D:\\React\\React\\classes\\yektanet-project\\src\\reducers\\reducer.js",[],"D:\\React\\React\\classes\\yektanet-project\\src\\actions\\action.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":23},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":23},{"ruleId":"58","severity":1,"message":"64","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",["65"],["66"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]